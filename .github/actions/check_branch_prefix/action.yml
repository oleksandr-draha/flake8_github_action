name: "Check PR branch prefix"
description: "Checks PR branch prefix"
inputs:
  branch_name:
    required: true
    type: string
outputs:
  error_found:
    description: "Result of checking branch for valid prefix"
    value: ${{ steps.check-branch-prefix.outputs.error_found }}
  leftover_branch:
    description: "The rest of branch name after valid prefix was distracted"
    value: ${{ steps.check-branch-prefix.outputs.leftover_branch }}

runs:
  using: "composite"
  steps:
  - name: check-branch-prefix
    id: check-branch-prefix
    uses: actions/github-script@v3.1.0
    with:
      script: |
        const allowedPrefixes = ["feature", "hotfix", "release", "bugfix"];
        var errorFound = "";
        var branchName = "${{ inputs.branch_name }}";
        var leftoverBranch = branchName;
        const branchNameParts = branchName.split("/");
        if (branchNameParts.length != 2) {
          errorFound = `No prefix was found in branch name **` + branchName + `**.
        Branch name must begin with one of: **` + allowedPrefixes.join(', ') + `**.`;
        } else if (!allowedPrefixes.includes(branchNameParts[0]))  {
          errorFound = "**" + branchNameParts[0] + "** is not one of: **" + allowedPrefixes.join(', ') + '**.';
        } else {
          leftoverBranch = branchNameParts[1];
        };
        let ticketPattern = /^[a-zA-Z]+-[0-9]+/;
        let findTicketResult = leftoverBranch.match(ticketPattern);
        if (findTicketResult !== null) {
          leftoverBranch = findTicketResult[0];
        } else {
          if (errorFound) {
            errorFound += "\n";
          }
          errorFound += "No possible ticket reference was found in branch name **" + branchName + "**.";
        }
        core.setOutput('error_found', errorFound);
        core.setOutput('leftover_branch', leftoverBranch);
